

Properties props = new Properties()
def propFile = new File(project.getProjectDir().getParentFile(), 'credentials.properties')
def artifactoryUrl="https://artifactory.distri-mind.fr:443/artifactory"
def sonatypeStagingUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
def artifactoryUser=""
def artifactoryPwd=""
def sonatypeUser=""
def sonatypePwd=""

if (propFile.canRead())
{
    props.load(new FileInputStream(propFile))


    if (props!=null && props.containsKey('artifactory_contextUrl'))
        artifactoryUrl=props.get("artifactory_contextUrl")
    if (props!=null && props.containsKey('artifactory_user'))
        artifactoryUser=props.get("artifactory_user")
    if (props!=null && props.containsKey('artifactory_password'))
        artifactoryPwd=props.get("artifactory_password")
    if (props!=null && props.containsKey('sonatype_staging_url'))
        sonatypeStagingUrl=props.get("sonatype_staging_url")
    if (props!=null && props.containsKey('sonatype_user'))
        sonatypeUser=props.get("sonatype_user")
    if (props!=null && props.containsKey('sonatype_password'))
        sonatypePwd=props.get("sonatype_password")
}










version='1.1.0-STABLE'
group='com.distrimind.upnp_igd'


subprojects {
    ext {
        jettyVersion='12.0.12'
        beanShellVersion='2.0b6'
        jsoupVersion='1.18.1'
        jakartaCdiAPIVersion='4.0.1'
        jakartaServletVersion='6.0.0'//this version depends on used jetty version into Android module
        testngVersion='7.10.2'

        javaVersion = JavaVersion.VERSION_11
    }

    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'pmd'


    compileJava.options.compilerArgs.addAll(['--release', ext.javaVersion] as Collection<? extends String>)
    javadoc.options.addStringOption("html5", "-quiet")

    /*gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs << "-Xlint:unchecked"
            }
        }
    }*/

    repositories {


        maven {
            url "${artifactoryUrl}/gradle-release/"
            if (artifactoryUser!="")
            {
                credentials {
                    username "${artifactoryUser}"
                    password "${artifactoryPwd}"
                }
            }
        }

    }
    pmd {
        consoleOutput = true
        toolVersion = "7.4.0"
        rulesMinimumPriority = 5
        ruleSetFiles = files("../pmd/pmd-rules.xml")
    }


    version=parent.version


    jar {
        manifest {
            attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version)
        }

        manifest.attributes('Multi-Release': 'false')
        manifest.attributes('Bundle-Name': jar.archiveBaseName)
        manifest.attributes('Bundle-SymbolicName': jar.archiveBaseName)
        manifest.attributes('Bundle-RequiredExecutionEnvironment': 'JavaSE-'+JavaVersion.VERSION_11)

        from('../COPYING') {
            rename { fileName ->
                "COPYING-"+project.name
            }
        }
        from('NOTICE') {
            rename { fileName ->
                "NOTICE-"+project.name
            }
        }
    }


    tasks.register('sourcesJar', Jar) {
        dependsOn classes
        manifest {
            attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version)
        }
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
        from('../COPYING') {
            rename { fileName ->
                "COPYING-"+project.name
            }
        }
        from('NOTICE') {
            rename { fileName ->
                "NOTICE-"+project.name
            }
        }
    }

    tasks.register('javadocJar', Jar) {
        dependsOn javadoc
        manifest {
            attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version)
        }
        archiveClassifier.set("javadoc")
        from javadoc.destinationDir
        from('../COPYING') {
            rename { fileName ->
                "COPYING-"+project.name
            }
        }
        from('NOTICE') {
            rename { fileName ->
                "NOTICE-"+project.name
            }
        }
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = project.name
                    description = 'UPnP IGD stack for Java and Android'
                    url = 'https://github.com/JasonMahdjoub/UPnPIGD'
                    developers {
                        developer {
                            id = 'cb'
                            name = 'Christian Bauer'
                            email = 'cb@4thline.com'
                            organization = '4th Line GmbH, Switzerland'
                            roles.add('Project Lead')
                        }
                        developer {
                            id = 'jmahdjoub'
                            name = 'Jason Mahdjoub'
                            email = 'jason.mahdjoub@distri-mind.fr'
                            organization = 'DistriMind'
                        }
                    }
                    organization {
                        name = 'DistriMind'
                        url = 'https://github.com/JasonMahdjoub'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/JasonMahdjoub/UPnPIGD/issues'
                    }
                    scm {
                        connection = 'https://github.com/JasonMahdjoub/UPnPIGD'
                        developerConnection = connection
                        url = connection
                    }
                    licenses {
                        license {
                            name = 'GNU LESSER GENERAL PUBLIC COPYING Version 2.1'
                            url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                        }
                    }

                }
            }
        }
        repositories {
            maven {
                credentials {
                    username "${artifactoryUser}"
                    password "${artifactoryPwd}"
                }
                url "${artifactoryUrl}/DistriMind-Public"
            }
            maven {
                credentials {
                    username "${sonatypeUser}"
                    password "${sonatypePwd}"
                }
                url "${sonatypeStagingUrl}"
            }
        }
    }
    signing {
        useGpgCmd()
        required {!project.hasProperty('disableSigning')}
        if (required) {
            sign configurations.archives
            sign publishing.publications.mavenJava
        }

    }
    javadoc {
        options.addBooleanOption('html5', true)
    }
}











